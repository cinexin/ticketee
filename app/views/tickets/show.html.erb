<div id="ticket">
	<h2><%= @ticket.title %></h2>

	<!-- what's that "simple_format" thing...?
		this method converts the line breaks entered in the description
		into <br> html tags so that the description renders in the page
		the way it was intended to
	-->
	<%= simple_format(@ticket.description) %>

	<% if @ticket.user %>
		<span id="author">
			Created by <%=@ticket.user.email %>
		</span>
	<% end %>

	<!-- short way of rendering a partial -->
	<%= render @ticket.state if @ticket.state %>	


	<!-- this is the way we can show multiple attached files -->
	<% if @ticket.assets.exists? %>
		<h3>Attached File</h3>
		<div class="assets">
			<% @ticket.assets.each do |asset| %>
				<p>
					<!-- asset.asset.url isn't valid anymore,
						since we changed the default path of the
						uploaded files (see "app/uploaders/asset_uploader.rb"), instead, we'll use the "file_path(asset)" helper -->
					<%= link_to File.basename(asset.asset.path), file_path(asset) %>
				</p>
				<p>
					<small><%= number_to_human_size(asset.asset.size) %></small>
				</p>
			<% end %>
		</div>

	<% end %>


	<% authorized?("edit tickets", @project) do %>
		<%= link_to "Edit Ticket", edit_project_ticket_path(@project,@ticket) %>
	<% end %>

	<% authorized?("delete tickets", @project) do %>
		<%= link_to "Delete Ticket", project_ticket_path(@project,@ticket), method: :delete, data: {confirm: "Are you sure you want to delete this ticket?"} %>
	<% end %>

	<h3>Comments</h3>
	<div id ="comments">
		<!-- this is the lightest way to query...-->
		<% if @ticket.comments.exists? %>
			<!-- when you call "select" on an array, you can pass
				it to a block wich it will evaluate on all objects 
				inside that array and return any element which makes
				the block evaluate to anything that's not nil or false-->
			<!-- the persisted? method checks if an object is persisted in the database -->
			<!-- by using "render", Rails will render a partial for every single element in this collection and will try to locate tha partial using the first object's class name.
			In this case, since the class is "Comment", Rails will try to find it in: "app/views/comments/_comment.html.erb" -->
			<%= render @ticket.comments.select(&:persisted?) %>
		<% else %>
			There are no comments for this ticket.
		<% end %>
	</div>

	<%= render "comments/form"  %>

</div>	